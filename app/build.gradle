plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'  //kapt3插件

// 创建一个名为 keystorePropertiesFile 的变量，并将其初始化为 rootProject 文件夹中的 keystore.properties 文件。
def keystorePropertiesFile = rootProject.file("keystore.properties")

// 初始化一个名为 keystoreProperties 的新 Properties() 对象。
def keystoreProperties = new Properties()

// 将您的 keystore.properties 文件加载到 keystoreProperties 对象中。
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// 获取当前系统时间
static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss")
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    defaultConfig {
        applicationId "com.bizeng.lh"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
                        rxhttp_rxjava : 'rxjava3',
                        rxhttp_package: 'rxhttp'   //非必须，指定RxHttp类包名
                ]
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'x86'
//            'armeabi', 'x86','armeabi', 'armeabi-v7a' //, 'x86_64', 'arm64-v8a'
        }

        //解决渠道包报错All flavors must now belong to a named flavor dimension. Learn more at https://d.android.com/r/tools/flavorDimensions-missing-error-message.html
        flavorDimensions "versionCode"

    }
//    dataBinding {
//        enabled true
//    }
    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

//    统一版本
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion rootProject.ext.version["androidSupportSdkVersion"]
                }
            }
            if (requested.group == 'androidx.appcompat') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion rootProject.ext.version["androidXSdkVersion"]
                }
            }
        }
    }

    productFlavors {
        Test {
            manifestPlaceholders = [APP_CHANNEL_VALUE: "Test"]
        }
        TheExistingNetwork {
            manifestPlaceholders = [APP_CHANNEL_VALUE: "TheExistingNetwork"]
        }
    }


    //打包改名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // 名称_android_版本号.apk
            def targetVersion = variant.getMergedFlavor().getTargetSdkVersion().getApiLevel()
            def minVersion = variant.getMergedFlavor().getMinSdkVersion().getApiLevel()
            if (buildType.name.equals("debug")) {
                outputFileName = "APP_V${defaultConfig.versionName}.apk"
            } else {
                outputFileName = "APP_${releaseTime()}_target${targetVersion}_min${minVersion}_V${defaultConfig.versionName}.apk"
            }
        }
    }

}

dependencies {

    api project(':mvvmsmart')     //MVVMSmart
    api project(':dialoglib')
    api project(':share2')
    api project(':rxhttp')
//    api project(':rxhttp-annotation')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //底部tabBar
    implementation 'me.majiajie:pager-bottom-tab-strip:2.3.0X'
    // 刷新框架
    api rootProject.ext.dependencies["smartRefreshLayout"]

    implementation 'me.jessyan:autosize:1.2.1'

    implementation 'com.github.angcyo.DslTablayout:TabLayout:3.0.0'

    implementation 'com.github.lihangleo2:ShadowLayout:3.2.0'

    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    //仿ios时间选择
    implementation 'com.github.gzu-liyujiang.AndroidPicker:Common:2.0.0'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:WheelPicker:2.0.0'

    implementation 'com.youth.banner:banner:2.1.0'

    implementation 'com.squareup.okhttp3:okhttp:4.9.1' //rxhttp v2.2.2版本起，需要手动依赖okhttp
    kapt 'com.ljx.rxhttp:rxhttp-compiler:2.5.7' //生成RxHttp类，纯Java项目，请使用annotationProcessor代替kapt

    implementation('com.squareup.okhttp3:logging-interceptor:4.4.0') {
        exclude group: 'org.json', module: 'json'
    }

    // 友盟基础组件库（所有友盟业务SDK都依赖基础组件库）远程依赖失败
    implementation "com.umeng.umsdk:common:9.4.0" //（必选）
    implementation "com.umeng.umsdk:asms:1.2.3" // asms包依赖(必选)
//    implementation "com.umeng.umsdk:apm:1.3.1'" // 应用性能监控SDK依赖(必选)
//    implementation "com.umeng.umsdk:crash:1.2.0" // native crash包依赖(必选)
//     下面各SDK根据宿主App是否使用相关业务按需引入。
//    implementation "com.umeng.umsdk:abtest:1.2.0" // ABTest功能依赖(可选)
//    implementation "com.umeng.umsdk:game:9.2.0+G" // 游戏统计SDK依赖(可选)

    implementation 'com.tencent.bugly:crashreport_upgrade:1.5.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.9.1'


    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    //二维码
    api "com.google.zxing:core:3.3.2"
    implementation 'org.greenrobot:eventbus:3.2.0'

    //内存监控
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0'

    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    api rootProject.ext.dependencies["glide"] //    Glide
    api rootProject.ext.dependencies["okhttp3-integration"] //    https图片处理
    kapt rootProject.ext.dependencies["glide-compiler"]  //  Glide

}
